{"ast":null,"code":"import _slicedToArray from \"/home/cubex/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/test/db-func/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/cubex/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/test/db-func/src/index.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\"; // implement the useDebounce custom hook\n// it should return the original value until\n// the value has not changed in delay ms\n// you may change code only in function below\n// also you can import whatever you need\n\nfunction useDebounce(value, delay) {\n  var isCooldown = false;\n  if (isCooldown) return;\n  isCooldown = true;\n  setTimeout(function () {\n    return isCooldown = false;\n  }, delay);\n  return value;\n}\n\nfunction App() {\n  var delay = 2000;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      query = _useState2[0],\n      setQuery = _useState2[1];\n\n  var debouncedQuery = useDebounce(query, delay);\n\n  var handleInputChange = function handleInputChange(event) {\n    return setQuery(event.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    value: query,\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Query: \", query), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Debounced Query: \", debouncedQuery));\n}\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/home/cubex/Рабочий стол/test/db-func/src/index.js"],"names":["React","useState","ReactDOM","useDebounce","value","delay","isCooldown","setTimeout","App","query","setQuery","debouncedQuery","handleInputChange","event","target","rootElement","document","getElementById","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAO,cAAP,C,CAEA;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,KAA5B,EAAmC;AAC/B,MAAIC,UAAU,GAAG,KAAjB;AAEA,MAAIA,UAAJ,EAAgB;AAEhBA,EAAAA,UAAU,GAAG,IAAb;AAEAC,EAAAA,UAAU,CAAC;AAAA,WAAMD,UAAU,GAAG,KAAnB;AAAA,GAAD,EAA2BD,KAA3B,CAAV;AAEA,SAAOD,KAAP;AAEH;;AAED,SAASI,GAAT,GAAe;AACX,MAAMH,KAAK,GAAG,IAAd;;AADW,kBAEeJ,QAAQ,CAAC,EAAD,CAFvB;AAAA;AAAA,MAEJQ,KAFI;AAAA,MAEGC,QAFH;;AAGX,MAAMC,cAAc,GAAGR,WAAW,CAACM,KAAD,EAAQJ,KAAR,CAAlC;;AAGA,MAAMO,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK;AAAA,WAAIH,QAAQ,CAACG,KAAK,CAACC,MAAN,CAAaV,KAAd,CAAZ;AAAA,GAA/B;;AAEA,SACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEK,KAA1B;AAAiC,IAAA,QAAQ,EAAEG,iBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWH,KAAX,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAqBE,cAArB,CAHJ,CADJ;AAOH;;AAED,IAAMI,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAf,QAAQ,CAACgB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAwBH,WAAxB","sourcesContent":["import React, {useState} from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\n\n// implement the useDebounce custom hook\n// it should return the original value until\n// the value has not changed in delay ms\n// you may change code only in function below\n// also you can import whatever you need\nfunction useDebounce(value, delay) {\n    let isCooldown = false;\n\n    if (isCooldown) return;\n\n    isCooldown = true;\n\n    setTimeout(() => isCooldown = false, delay);\n\n    return value;\n\n}\n\nfunction App() {\n    const delay = 2000;\n    const [query, setQuery] = useState(\"\");\n    const debouncedQuery = useDebounce(query, delay);\n\n\n    const handleInputChange = event => setQuery(event.target.value);\n\n    return (\n        <div className=\"App\">\n            <input type=\"text\" value={query} onChange={handleInputChange}/>\n            <p>Query: {query}</p>\n            <p>Debounced Query: {debouncedQuery}</p>\n        </div>\n    );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App/>, rootElement);\n"]},"metadata":{},"sourceType":"module"}